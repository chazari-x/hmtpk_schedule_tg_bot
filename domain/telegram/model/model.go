package model

import "time"

type MySchCode int

func (c MySchCode) Code() string {
	switch c {
	case 0:
		return "0" + MyScheduleCode
	case 1:
		return "1" + MyScheduleCode
	case 2:
		return "2" + MyScheduleCode
	case 3:
		return "3" + MyScheduleCode
	case 4:
		return "4" + MyScheduleCode
	case 5:
		return "5" + MyScheduleCode
	case 6:
		return "6" + MyScheduleCode
	default:
		return "7" + MyScheduleCode
	}
}

type GroupSchCode int

func (c GroupSchCode) Code(group string) string {
	switch c {
	case 0:
		return "0" + GroupScheduleCode + group
	case 1:
		return "1" + GroupScheduleCode + group
	case 2:
		return "2" + GroupScheduleCode + group
	case 3:
		return "3" + GroupScheduleCode + group
	case 4:
		return "4" + GroupScheduleCode + group
	case 5:
		return "5" + GroupScheduleCode + group
	case 6:
		return "6" + GroupScheduleCode + group
	default:
		return "7" + GroupScheduleCode + group
	}
}

type TeacherSchCode int

func (c TeacherSchCode) Code(teacher string) string {
	switch c {
	case 0:
		return "0" + TeacherScheduleCode + teacher
	case 1:
		return "1" + TeacherScheduleCode + teacher
	case 2:
		return "2" + TeacherScheduleCode + teacher
	case 3:
		return "3" + TeacherScheduleCode + teacher
	case 4:
		return "4" + TeacherScheduleCode + teacher
	case 5:
		return "5" + TeacherScheduleCode + teacher
	case 6:
		return "6" + TeacherScheduleCode + teacher
	default:
		return "7" + TeacherScheduleCode + teacher
	}
}

const (
	MyScheduleCode      = "M"
	GroupScheduleCode   = "G"
	TeacherScheduleCode = "T"
)

type Button string

const (
	Home            string = "–ü–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
	Support         string = "–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"
	Settings        string = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
	MySchedule      string = "–ú–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
	ChangeMyGroup   string = "–ò–∑–º–µ–Ω–∏—Ç—å –º–æ—é –≥—Ä—É–ø–ø—É"
	OtherSchedule   string = "–î—Ä—É–≥–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
	GroupSchedule   string = /*"üë©‚Äçüéì" + */ "–ì—Ä—É–ø–ø—ã"        /* + "üë®‚Äçüéì"*/
	TeacherSchedule string = /*"üë©‚Äçüè´" + */ "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏" /*+ "üë®‚Äçüè´"*/
)

func (b Button) Value() string {
	switch b {
	case Button(Home):
		return `–î–æ—Ä–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!

–≠—Ç–æ—Ç –±–æ—Ç –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –µ–≥–æ —É–ª—É—á—à–µ–Ω–∏–µ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –Ω–∞–∏–ª—É—á—à–∏–π –æ–ø—ã—Ç.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø–æ–ª–Ω–æ–º –æ–±—ä–µ–º–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–∞–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É!

–° –Ω–∞–∏–ª—É—á—à–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏,
–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.`
	case Button(Support):
		return `–î–æ—Ä–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏!

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–∞—à–∞ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–æ—Ç–æ–≤–∞ –≤–∞–º –ø–æ–º–æ—á—å. –í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —Å—Å—ã–ª–∫–µ: <a href="%s">–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±–æ—Ç–∞</a>.

–ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!

–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.

–° –Ω–∞–∏–ª—É—á—à–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏,
–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.`
	case Button(MySchedule):
		return ""
	case Button(Settings):
		return "–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
	case Button(ChangeMyGroup):
		return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã."
	case Button(OtherSchedule):
		return "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
	case Button(GroupSchedule):
		return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã."
	case Button(TeacherSchedule):
		return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è."
	default:
		return "-"
	}
}

type Weekday int

const (
	Sunday Weekday = iota
	Monday
	Tuesday
	Wednesday
	Thursday
	Friday
	Saturday
)

func (d Weekday) String() string {
	switch d {
	case 1:
		return "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"
	case 2:
		return "–í—Ç–æ—Ä–Ω–∏–∫"
	case 3:
		return "–°—Ä–µ–¥–∞"
	case 4:
		return "–ß–µ—Ç–≤–µ—Ä–≥"
	case 5:
		return "–ü—è—Ç–Ω–∏—Ü–∞"
	case 6:
		return "–°—É–±–±–æ—Ç–∞"
	case 0:
		return "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
	default:
		return Weekday(time.Now().Weekday()).String()
	}
}
